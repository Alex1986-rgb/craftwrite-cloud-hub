
import { SERVICES } from "@/data/services";
import { ConversationState, ProjectDetails } from "./ConversationContext";

export interface PriceComponent {
  name: string;
  basePrice: number;
  multiplier?: number;
  description: string;
}

export interface Discount {
  name: string;
  percentage: number;
  condition: string;
  applicable: boolean;
}

export interface PriceCalculation {
  basePrice: number;
  components: PriceComponent[];
  discounts: Discount[];
  finalPrice: number;
  breakdown: string;
  recommendations: string[];
  timeline: string;
}

export class AdvancedPriceCalculator {
  static calculateServicePrice(serviceType: string, details: ProjectDetails, clientType: string): PriceCalculation {
    const service = SERVICES.find(s => 
      s.name.toLowerCase().includes(serviceType.toLowerCase()) ||
      s.category.toLowerCase().includes(serviceType.toLowerCase())
    );

    if (!service) {
      return this.getCustomQuote(details);
    }

    const components: PriceComponent[] = [];
    let basePrice = service.price.min;

    // –ë–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞ —É—Å–ª—É–≥–∏
    components.push({
      name: service.name,
      basePrice: service.price.min,
      description: `–ë–∞–∑–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å ${service.name}`
    });

    // –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
    if (details.complexity === '—Å–ª–æ–∂–Ω–∞—è') {
      const complexityMultiplier = 1.5;
      components.push({
        name: '–°–ª–æ–∂–Ω–æ—Å—Ç—å',
        basePrice: service.price.min * 0.5,
        multiplier: complexityMultiplier,
        description: '–ù–∞–¥–±–∞–≤–∫–∞ –∑–∞ –≤—ã—Å–æ–∫—É—é —Å–ª–æ–∂–Ω–æ—Å—Ç—å'
      });
      basePrice *= complexityMultiplier;
    } else if (details.complexity === '—Å—Ä–µ–¥–Ω—è—è') {
      const complexityMultiplier = 1.2;
      components.push({
        name: '–°–ª–æ–∂–Ω–æ—Å—Ç—å',
        basePrice: service.price.min * 0.2,
        multiplier: complexityMultiplier,
        description: '–ù–∞–¥–±–∞–≤–∫–∞ –∑–∞ —Å—Ä–µ–¥–Ω—é—é —Å–ª–æ–∂–Ω–æ—Å—Ç—å'
      });
      basePrice *= complexityMultiplier;
    }

    // –û–±—ä–µ–º —Ä–∞–±–æ—Ç
    if (details.volume && details.volume > 1) {
      const volumePrice = (details.volume - 1) * service.price.min;
      components.push({
        name: `–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –æ–±—ä–µ–º (${details.volume - 1} –µ–¥.)`,
        basePrice: volumePrice,
        description: `–°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö ${details.volume - 1} –µ–¥–∏–Ω–∏—Ü`
      });
      basePrice += volumePrice;
    }

    // –°—Ä–æ—á–Ω–æ—Å—Ç—å
    if (details.deadline) {
      const urgencyMultiplier = this.getUrgencyMultiplier(details.deadline);
      if (urgencyMultiplier > 1) {
        const urgencyPrice = basePrice * (urgencyMultiplier - 1);
        components.push({
          name: '–°—Ä–æ—á–Ω–æ—Å—Ç—å',
          basePrice: urgencyPrice,
          multiplier: urgencyMultiplier,
          description: '–î–æ–ø–ª–∞—Ç–∞ –∑–∞ —Å—Ä–æ—á–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ'
        });
        basePrice *= urgencyMultiplier;
      }
    }

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
    if (details.additionalRequirements?.length) {
      const additionalPrice = details.additionalRequirements.length * 500;
      components.push({
        name: '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è',
        basePrice: additionalPrice,
        description: `–°—Ç–æ–∏–º–æ—Å—Ç—å ${details.additionalRequirements.length} –¥–æ–ø. —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π`
      });
      basePrice += additionalPrice;
    }

    // –†–∞—Å—á–µ—Ç —Å–∫–∏–¥–æ–∫
    const discounts = this.calculateDiscounts(basePrice, details, clientType);
    const totalDiscount = discounts.reduce((sum, d) => sum + (d.applicable ? (basePrice * d.percentage / 100) : 0), 0);
    const finalPrice = Math.max(basePrice - totalDiscount, service.price.min);

    return {
      basePrice,
      components,
      discounts,
      finalPrice,
      breakdown: this.generateBreakdown(components, discounts, finalPrice),
      recommendations: this.generateRecommendations(service, details, clientType),
      timeline: this.calculateTimeline(service, details)
    };
  }

  private static getUrgencyMultiplier(deadline: string): number {
    const lower = deadline.toLowerCase();
    if (lower.includes('—Å–µ–≥–æ–¥–Ω—è') || lower.includes('–∑–∞–≤—Ç—Ä–∞') || lower.includes('12 —á–∞—Å')) {
      return 2.0; // 100% –Ω–∞–¥–±–∞–≤–∫–∞
    }
    if (lower.includes('2 –¥–Ω—è') || lower.includes('48 —á–∞—Å')) {
      return 1.5; // 50% –Ω–∞–¥–±–∞–≤–∫–∞
    }
    if (lower.includes('–Ω–µ–¥–µ–ª—è') || lower.includes('7 –¥–Ω–µ–π')) {
      return 1.2; // 20% –Ω–∞–¥–±–∞–≤–∫–∞
    }
    return 1.0;
  }

  private static calculateDiscounts(basePrice: number, details: ProjectDetails, clientType: string): Discount[] {
    const discounts: Discount[] = [
      {
        name: '–°–∫–∏–¥–∫–∞ –¥–ª—è –Ω–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤',
        percentage: 10,
        condition: '–ü–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑',
        applicable: clientType === '–Ω–æ–≤–∏—á–æ–∫'
      },
      {
        name: '–°–∫–∏–¥–∫–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞',
        percentage: 15,
        condition: '–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç',
        applicable: clientType === '–ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π'
      },
      {
        name: '–ü–∞–∫–µ—Ç–Ω–∞—è —Å–∫–∏–¥–∫–∞',
        percentage: 20,
        condition: '–ó–∞–∫–∞–∑ –æ—Ç 10 –µ–¥–∏–Ω–∏—Ü',
        applicable: (details.volume || 0) >= 10
      },
      {
        name: '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∞—è —Å–∫–∏–¥–∫–∞',
        percentage: 25,
        condition: '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –∫–ª–∏–µ–Ω—Ç',
        applicable: clientType === '–±–∏–∑–Ω–µ—Å' && basePrice > 10000
      }
    ];

    return discounts;
  }

  private static generateBreakdown(components: PriceComponent[], discounts: Discount[], finalPrice: number): string {
    let breakdown = "üí∞ –ü–æ–¥—Ä–æ–±–Ω—ã–π —Ä–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏:\n\n";
    
    components.forEach(component => {
      breakdown += `‚Ä¢ ${component.name}: ${component.basePrice}‚ÇΩ\n`;
      if (component.description) {
        breakdown += `  ${component.description}\n`;
      }
    });

    const applicableDiscounts = discounts.filter(d => d.applicable);
    if (applicableDiscounts.length > 0) {
      breakdown += "\nüéâ –ü—Ä–∏–º–µ–Ω—è–µ–º—ã–µ —Å–∫–∏–¥–∫–∏:\n";
      applicableDiscounts.forEach(discount => {
        breakdown += `‚Ä¢ ${discount.name}: -${discount.percentage}%\n`;
      });
    }

    breakdown += `\n‚ú® –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${finalPrice}‚ÇΩ`;
    
    return breakdown;
  }

  private static generateRecommendations(service: any, details: ProjectDetails, clientType: string): string[] {
    const recommendations: string[] = [];

    if (clientType === '–Ω–æ–≤–∏—á–æ–∫') {
      recommendations.push("üìö –†–µ–∫–æ–º–µ–Ω–¥—É—é –Ω–∞—á–∞—Ç—å —Å –ø–∞–∫–µ—Ç–∞ '–°—Ç–∞—Ä—Ç' - 3 —Å—Ç–∞—Ç—å–∏ —Å–æ —Å–∫–∏–¥–∫–æ–π");
      recommendations.push("üéØ –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–æ SEO-—Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –≤ –ø–æ–¥–∞—Ä–æ–∫");
    }

    if (details.volume && details.volume > 5) {
      recommendations.push("üì¶ –ü—Ä–∏ –∑–∞–∫–∞–∑–µ –ø–∞–∫–µ—Ç–∞ —ç–∫–æ–Ω–æ–º–∏—è —Å–æ—Å—Ç–∞–≤–∏—Ç –¥–æ 30%");
      recommendations.push("‚ö° –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è –∫—Ä—É–ø–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤");
    }

    if (service.category === '–ö–æ–Ω—Ç–µ–Ω—Ç-–º–∞—Ä–∫–µ—Ç–∏–Ω–≥') {
      recommendations.push("üìà –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç-—Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ (+2000‚ÇΩ)");
      recommendations.push("üîç SEO-–∞—É–¥–∏—Ç –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –≤ –ø–æ–¥–∞—Ä–æ–∫ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ –æ—Ç 10 —Å—Ç–∞—Ç–µ–π");
    }

    return recommendations;
  }

  private static calculateTimeline(service: any, details: ProjectDetails): string {
    let baseDays = service.deliveryTime.max;
    
    if (details.volume && details.volume > 1) {
      baseDays += Math.ceil(details.volume / 3); // +1 –¥–µ–Ω—å –Ω–∞ –∫–∞–∂–¥—ã–µ 3 –µ–¥–∏–Ω–∏—Ü—ã
    }

    if (details.complexity === '—Å–ª–æ–∂–Ω–∞—è') {
      baseDays *= 1.5;
    }

    return `‚è∞ –°—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${Math.ceil(baseDays)} –¥–Ω–µ–π`;
  }

  private static getCustomQuote(details: ProjectDetails): PriceCalculation {
    return {
      basePrice: 5000,
      components: [{
        name: '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç',
        basePrice: 5000,
        description: '–°—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ'
      }],
      discounts: [],
      finalPrice: 5000,
      breakdown: "–î–ª—è —Ç–æ—á–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å —ç–∫—Å–ø–µ—Ä—Ç–æ–º.",
      recommendations: ["üìû –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å —ç–∫—Å–ø–µ—Ä—Ç–æ–º", "üìã –°–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¢–ó –≤ –ø–æ–¥–∞—Ä–æ–∫"],
      timeline: "‚è∞ –°—Ä–æ–∫: –æ–±—Å—É–∂–¥–∞–µ—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ"
    };
  }
}
