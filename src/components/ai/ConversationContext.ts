
export interface ConversationStep {
  id: string;
  type: 'question' | 'info_gathering' | 'calculation' | 'recommendation';
  question: string;
  options?: string[];
  validators?: ((answer: string) => boolean)[];
  nextStep?: string | ((answer: string) => string);
}

export interface ClientProfile {
  type: '–Ω–æ–≤–∏—á–æ–∫' | '–±–∏–∑–Ω–µ—Å' | '–ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π' | '–Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω';
  industry?: string;
  budget?: { min: number; max: number };
  urgency?: '–æ–±—ã—á–Ω–∞—è' | '—Å—Ä–æ—á–Ω–∞—è' | '—ç–∫—Å–ø—Ä–µ—Å—Å';
  previousServices?: string[];
  communicationStyle: '–¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π' | '–¥–µ–ª–æ–≤–æ–π' | '–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ç–∏–≤–Ω—ã–π';
}

export interface ProjectDetails {
  serviceType?: string;
  volume?: number;
  deadline?: string;
  complexity?: '–ø—Ä–æ—Å—Ç–∞—è' | '—Å—Ä–µ–¥–Ω—è—è' | '—Å–ª–æ–∂–Ω–∞—è';
  additionalRequirements?: string[];
  targetAudience?: string;
  goals?: string[];
}

export interface ConversationState {
  currentStep?: string;
  clientProfile: ClientProfile;
  projectDetails: ProjectDetails;
  gatheredInfo: Record<string, any>;
  calculatedPrice?: {
    base: number;
    discounts: Array<{ reason: string; amount: number }>;
    final: number;
    breakdown: Array<{ item: string; cost: number }>;
  };
  context: string[];
  mood: 'neutral' | 'interested' | 'concerned' | 'excited' | 'impatient';
}

export const conversationSteps: Record<string, ConversationStep> = {
  welcome: {
    id: 'welcome',
    type: 'question',
    question: '–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ –∏ –≤–∞—à–µ–º –ø—Ä–æ–µ–∫—Ç–µ. –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –º–Ω–µ –ø–æ–¥–æ–±—Ä–∞—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ!',
    nextStep: 'service_type'
  },
  
  service_type: {
    id: 'service_type',
    type: 'question',
    question: '–ö–∞–∫–æ–π —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤–∞–º –Ω—É–∂–µ–Ω?',
    options: [
      'SEO-—Å—Ç–∞—Ç—å–∏ –¥–ª—è —Å–∞–π—Ç–∞',
      '–ü—Ä–æ–¥–∞—é—â–∏–π –ª–µ–Ω–¥–∏–Ω–≥',
      '–ö–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è —Å–æ—Ü—Å–µ—Ç–µ–π',
      '–û–ø–∏—Å–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤',
      'Email-—Ä–∞—Å—Å—ã–ª–∫–∏',
      '–î—Ä—É–≥–æ–µ'
    ],
    nextStep: (answer) => {
      if (answer.includes('—Å—Ç–∞—Ç—å–∏')) return 'seo_details';
      if (answer.includes('–ª–µ–Ω–¥–∏–Ω–≥')) return 'landing_details';
      if (answer.includes('—Å–æ—Ü—Å–µ—Ç–∏')) return 'social_details';
      if (answer.includes('—Ç–æ–≤–∞—Ä–æ–≤')) return 'product_details';
      if (answer.includes('email')) return 'email_details';
      return 'custom_details';
    }
  },

  seo_details: {
    id: 'seo_details',
    type: 'info_gathering',
    question: '–û—Ç–ª–∏—á–Ω–æ! SEO-—Å—Ç–∞—Ç—å–∏ - —ç—Ç–æ –º–æ—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è üìù –î–∞–≤–∞–π—Ç–µ —É—Ç–æ—á–Ω–∏–º –¥–µ—Ç–∞–ª–∏:\n\n‚Ä¢ –°–∫–æ–ª—å–∫–æ —Å—Ç–∞—Ç–µ–π –Ω—É–∂–Ω–æ?\n‚Ä¢ –ö–∞–∫–æ–π –æ–±—ä–µ–º (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–Ω–∞–∫–æ–≤)?\n‚Ä¢ –ï—Å—Ç—å –ª–∏ –≥–æ—Ç–æ–≤–æ–µ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–µ —è–¥—Ä–æ?\n‚Ä¢ –ö–∞–∫–∏–µ —Å—Ä–æ–∫–∏?',
    nextStep: 'calculate_seo_price'
  },

  landing_details: {
    id: 'landing_details',
    type: 'info_gathering',
    question: '–ü—Ä–æ–¥–∞—é—â–∏–π –ª–µ–Ω–¥–∏–Ω–≥ - –æ—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Å–∏–∏! üöÄ –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ:\n\n‚Ä¢ –ß—Ç–æ –ø—Ä–æ–¥–∞–µ—Ç–µ?\n‚Ä¢ –ö—Ç–æ —Ü–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è?\n‚Ä¢ –ï—Å—Ç—å –ª–∏ —Ä–µ—Ñ–µ—Ä–µ–Ω—Å—ã –∏–ª–∏ –ø—Ä–∏–º–µ—Ä—ã?\n‚Ä¢ –ù—É–∂–Ω–∞ –ª–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Ñ–æ—Ä–º–∞–º–∏?',
    nextStep: 'calculate_landing_price'
  },

  social_details: {
    id: 'social_details',
    type: 'info_gathering',
    question: '–ö–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è —Å–æ—Ü—Å–µ—Ç–µ–π - –º–æ—è –ª—é–±–∏–º–∞—è —Ç–µ–º–∞! üì± –£—Ç–æ—á–Ω–∏—Ç–µ:\n\n‚Ä¢ –î–ª—è –∫–∞–∫–∏—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º (–í–ö, Instagram, Telegram)?\n‚Ä¢ –°–∫–æ–ª—å–∫–æ –ø–æ—Å—Ç–æ–≤ –≤ –º–µ—Å—è—Ü?\n‚Ä¢ –ù—É–∂–µ–Ω –ª–∏ –∫–æ–Ω—Ç–µ–Ω—Ç-–ø–ª–∞–Ω?\n‚Ä¢ –ö–∞–∫–∞—è —Ç–µ–º–∞—Ç–∏–∫–∞?',
    nextStep: 'calculate_social_price'
  }
};

export const clientTypeDetection = (message: string): ClientProfile['type'] => {
  const lowerMessage = message.toLowerCase();
  
  if (lowerMessage.includes('–≤–ø–µ—Ä–≤—ã–µ') || lowerMessage.includes('–Ω–∞—á–∏–Ω–∞—é') || lowerMessage.includes('–Ω–æ–≤–∏—á–æ–∫')) {
    return '–Ω–æ–≤–∏—á–æ–∫';
  }
  
  if (lowerMessage.includes('–∫–æ–º–ø–∞–Ω–∏—è') || lowerMessage.includes('–±–∏–∑–Ω–µ—Å') || lowerMessage.includes('–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è')) {
    return '–±–∏–∑–Ω–µ—Å';
  }
  
  if (lowerMessage.includes('—É–∂–µ —Ä–∞–±–æ—Ç–∞–ª–∏') || lowerMessage.includes('–ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π') || lowerMessage.includes('—Å–Ω–æ–≤–∞')) {
    return '–ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π';
  }
  
  return '–Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω';
};

export const moodDetection = (message: string): ConversationState['mood'] => {
  const lowerMessage = message.toLowerCase();
  
  if (lowerMessage.includes('—Å—Ä–æ—á–Ω–æ') || lowerMessage.includes('–±—ã—Å—Ç—Ä–æ') || lowerMessage.includes('–≤—á–µ—Ä–∞')) {
    return 'impatient';
  }
  
  if (lowerMessage.includes('–æ—Ç–ª–∏—á–Ω–æ') || lowerMessage.includes('—Å—É–ø–µ—Ä') || lowerMessage.includes('–∫—Ä—É—Ç–æ')) {
    return 'excited';
  }
  
  if (lowerMessage.includes('–¥–æ—Ä–æ–≥–æ') || lowerMessage.includes('–¥–µ—à–µ–≤–ª–µ') || lowerMessage.includes('–±—é–¥–∂–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω')) {
    return 'concerned';
  }
  
  if (lowerMessage.includes('–∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ') || lowerMessage.includes('–ø–æ–¥—Ä–æ–±–Ω–µ–µ') || lowerMessage.includes('—Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ')) {
    return 'interested';
  }
  
  return 'neutral';
};
