
import { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { MessageSquare, Bot, User, ArrowRight } from 'lucide-react';

const SCRIPT_EXAMPLES = {
  sales: {
    title: '–ü—Ä–æ–¥–∞–∂–∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏',
    platform: 'Telegram',
    conversion: '35%',
    messages: [
      { type: 'bot', text: 'üëã –ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ –∏–¥–µ–∞–ª—å–Ω—É—é –∫–≤–∞—Ä—Ç–∏—Ä—É. –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?' },
      { type: 'user', text: '–ê–Ω–Ω–∞' },
      { type: 'bot', text: '–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, –ê–Ω–Ω–∞! –í –∫–∞–∫–æ–º —Ä–∞–π–æ–Ω–µ –∏—â–µ—à—å –∂–∏–ª—å–µ?' },
      { type: 'user', text: '–¶–µ–Ω—Ç—Ä –≥–æ—Ä–æ–¥–∞' },
      { type: 'bot', text: 'üèôÔ∏è –û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä! –£ –Ω–∞—Å –µ—Å—Ç—å 12 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –≤ —Ü–µ–Ω—Ç—Ä–µ. –ö–∞–∫–æ–π –±—é–¥–∂–µ—Ç —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—à—å?' },
      { type: 'user', text: '–î–æ 8 –º–ª–Ω' },
      { type: 'bot', text: 'üí∞ –ü–æ–Ω—è—Ç–Ω–æ! –ü–æ–∫–∞–∑–∞—Ç—å 3 –ª—É—á—à–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–∞ –≤ —Ç–≤–æ–µ–º –±—é–¥–∂–µ—Ç–µ?' }
    ]
  },
  support: {
    title: '–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ SaaS',
    platform: 'WhatsApp',
    conversion: '90%',
    messages: [
      { type: 'bot', text: 'üîß –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É, —Å –∫–æ—Ç–æ—Ä–æ–π —Å—Ç–æ–ª–∫–Ω—É–ª–∏—Å—å' },
      { type: 'user', text: '–ù–µ –º–æ–≥—É –≤–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç' },
      { type: 'bot', text: 'üîê –ü–æ–Ω–∏–º–∞—é. –ö–∞–∫–∞—è –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏ –≤—Ö–æ–¥–µ?\n\n1Ô∏è‚É£ –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å\n2Ô∏è‚É£ –ê–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω\n3Ô∏è‚É£ –î—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞' },
      { type: 'user', text: '1' },
      { type: 'bot', text: 'üìß –û—Ç–ø—Ä–∞–≤–ª—é —Å—Å—ã–ª–∫—É –¥–ª—è —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è –Ω–∞ –≤–∞—à email. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—á—Ç—É —á–µ—Ä–µ–∑ 2 –º–∏–Ω—É—Ç—ã' }
    ]
  },
  lead: {
    title: '–õ–∏–¥–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∫—É—Ä—Å–æ–≤',
    platform: 'VK',
    conversion: '28%',
    messages: [
      { type: 'bot', text: 'üéì –ü—Ä–∏–≤–µ—Ç! –•–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å, –ø–æ–¥—Ö–æ–¥–∏—Ç –ª–∏ —Ç–µ–±–µ –Ω–∞—à –∫—É—Ä—Å –ø–æ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥—É?' },
      { type: 'user', text: '–î–∞' },
      { type: 'bot', text: 'üìä –û—Ç–ª–∏—á–Ω–æ! –ï—Å—Ç—å –ª–∏ —É —Ç–µ–±—è –æ–ø—ã—Ç –≤ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–µ?\n\n–ê) –°–æ–≤—Å–µ–º –Ω–æ–≤–∏—á–æ–∫\n–ë) 1-2 –≥–æ–¥–∞ –æ–ø—ã—Ç–∞\n–í) –û–ø—ã—Ç–Ω—ã–π –º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥' },
      { type: 'user', text: '–ê' },
      { type: 'bot', text: 'üöÄ –°—É–ø–µ—Ä! –ù–∞—à –∫—É—Ä—Å "–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥ —Å –Ω—É–ª—è" –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥–æ–π–¥–µ—Ç. –û—Å—Ç–∞–≤—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ - –ø—Ä–∏—à–ª—é –ø—Ä–æ–≥—Ä–∞–º–º—É –∏ —Å–∫–∏–¥–∫—É 30%' }
    ]
  }
};

export default function ChatbotExamples() {
  const [activeExample, setActiveExample] = useState('sales');

  return (
    <section className="py-16">
      <div className="container mx-auto px-4">
        <div className="text-center mb-12">
          <h2 className="text-3xl font-bold text-slate-900 mb-4">
            –ü—Ä–∏–º–µ—Ä—ã –Ω–∞—à–∏—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤
          </h2>
          <p className="text-slate-600 max-w-2xl mx-auto">
            –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ, –∫–∞–∫ –≤—ã–≥–ª—è–¥—è—Ç –¥–∏–∞–ª–æ–≥–∏ –≤ —Ä–µ–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
          </p>
        </div>

        <div className="max-w-4xl mx-auto">
          <Tabs value={activeExample} onValueChange={setActiveExample}>
            <TabsList className="grid w-full grid-cols-3 mb-8">
              <TabsTrigger value="sales">–ü—Ä–æ–¥–∞–∂–∏</TabsTrigger>
              <TabsTrigger value="support">–ü–æ–¥–¥–µ—Ä–∂–∫–∞</TabsTrigger>
              <TabsTrigger value="lead">–õ–∏–¥–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è</TabsTrigger>
            </TabsList>

            {Object.entries(SCRIPT_EXAMPLES).map(([key, example]) => (
              <TabsContent key={key} value={key}>
                <Card className="border-0 shadow-xl bg-white">
                  <CardHeader className="bg-gradient-to-r from-slate-50 to-blue-50">
                    <div className="flex items-center justify-between">
                      <div>
                        <CardTitle className="text-xl text-slate-900">
                          {example.title}
                        </CardTitle>
                        <p className="text-slate-600">–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: {example.platform}</p>
                      </div>
                      <Badge className="bg-green-100 text-green-800">
                        –ö–æ–Ω–≤–µ—Ä—Å–∏—è {example.conversion}
                      </Badge>
                    </div>
                  </CardHeader>

                  <CardContent className="p-6">
                    <div className="space-y-4 max-h-96 overflow-y-auto">
                      {example.messages.map((message, index) => (
                        <div
                          key={index}
                          className={`flex items-start gap-3 ${
                            message.type === 'user' ? 'flex-row-reverse' : 'flex-row'
                          }`}
                        >
                          <div
                            className={`w-8 h-8 rounded-full flex items-center justify-center ${
                              message.type === 'bot'
                                ? 'bg-blue-100 text-blue-600'
                                : 'bg-slate-100 text-slate-600'
                            }`}
                          >
                            {message.type === 'bot' ? (
                              <Bot className="w-4 h-4" />
                            ) : (
                              <User className="w-4 h-4" />
                            )}
                          </div>
                          <div
                            className={`max-w-xs p-3 rounded-lg ${
                              message.type === 'bot'
                                ? 'bg-blue-50 text-slate-900'
                                : 'bg-slate-100 text-slate-900'
                            }`}
                          >
                            <p className="text-sm whitespace-pre-line">{message.text}</p>
                          </div>
                        </div>
                      ))}
                    </div>

                    <div className="mt-6 pt-4 border-t">
                      <div className="flex items-center justify-between">
                        <div className="flex items-center gap-2 text-sm text-slate-500">
                          <MessageSquare className="w-4 h-4" />
                          {example.messages.length} —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –¥–∏–∞–ª–æ–≥–µ
                        </div>
                        <Button variant="outline" size="sm">
                          –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–ª–Ω—ã–π —Å–∫—Ä–∏–ø—Ç
                          <ArrowRight className="w-4 h-4 ml-2" />
                        </Button>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              </TabsContent>
            ))}
          </Tabs>
        </div>
      </div>
    </section>
  );
}
