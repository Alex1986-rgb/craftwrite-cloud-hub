import { useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Alert, AlertDescription } from '@/components/ui/alert';
import { CheckCircle, AlertTriangle, Rocket, Monitor, Settings, Globe } from 'lucide-react';
import { useSystemSettings } from '@/hooks/useSystemSettings';
import { toast } from '@/hooks/use-toast';

interface LaunchStep {
  id: string;
  title: string;
  description: string;
  status: 'pending' | 'completed' | 'warning';
  required: boolean;
}

export default function ProductionLaunchManager() {
  const [isLaunching, setIsLaunching] = useState(false);
  const { getSetting, updateSetting } = useSystemSettings();
  
  const launchSteps: LaunchStep[] = [
    {
      id: 'analytics',
      title: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞',
      description: 'Google Analytics –∏ –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã',
      status: (getSetting('google_analytics_enabled') || getSetting('yandex_metrika_enabled')) ? 'completed' : 'pending',
      required: false
    },
    {
      id: 'payments',
      title: '–ü–ª–∞—Ç–µ–∂–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞',
      description: '–ú–æ–¥—É–ª—å–±–∞–Ω–∫ –∏–ª–∏ –ÆKassa –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã',
      status: 'completed', // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º —á—Ç–æ —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ
      required: true
    },
    {
      id: 'notifications',
      title: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',
      description: 'Telegram –∏–ª–∏ Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω—ã',
      status: getSetting('telegram_notifications_enabled') ? 'completed' : 'warning',
      required: false
    },
    {
      id: 'seo',
      title: 'SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è',
      description: 'Sitemap.xml –∏ robots.txt –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã',
      status: 'completed', // –§–∞–π–ª—ã —É–∂–µ –µ—Å—Ç—å
      required: true
    },
    {
      id: 'content',
      title: '–ö–æ–Ω—Ç–µ–Ω—Ç –≥–æ—Ç–æ–≤',
      description: '–ë–ª–æ–≥, –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —É—Å–ª—É–≥ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã',
      status: 'completed', // –£ –Ω–∞—Å –µ—Å—Ç—å 65+ —Å—Ç–∞—Ç–µ–π
      required: true
    }
  ];

  const readyToLaunch = launchSteps.filter(step => step.required).every(step => step.status === 'completed');
  const productionMode = getSetting('production_mode');

  const handleLaunch = async () => {
    if (!readyToLaunch) {
      toast({
        title: "–ù–µ –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É",
        description: "–ó–∞–≤–µ—Ä—à–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —ç—Ç–∞–ø—ã",
        variant: "destructive"
      });
      return;
    }

    setIsLaunching(true);
    
    try {
      // –ü–µ—Ä–µ–≤–æ–¥–∏–º —Å–∏—Å—Ç–µ–º—É –≤ production —Ä–µ–∂–∏–º
      await updateSetting('production_mode', true);
      await updateSetting('launch_status', 'launched');
      
      // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É –µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞
      if (getSetting('google_analytics_enabled') || getSetting('yandex_metrika_enabled')) {
        // –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —É–∂–µ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ AnalyticsTracker
      }
      
      toast({
        title: "üöÄ –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞!",
        description: "CopyPro Cloud —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–≤–µ–¥—ë–Ω –≤ production —Ä–µ–∂–∏–º"
      });
      
    } catch (error) {
      toast({
        title: "–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞",
        description: "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–∏—Å—Ç–µ–º—É",
        variant: "destructive"
      });
    } finally {
      setIsLaunching(false);
    }
  };

  const getStepIcon = (status: string) => {
    switch (status) {
      case 'completed':
        return <CheckCircle className="h-5 w-5 text-green-600" />;
      case 'warning':
        return <AlertTriangle className="h-5 w-5 text-yellow-600" />;
      default:
        return <Monitor className="h-5 w-5 text-gray-400" />;
    }
  };

  const getStepBadge = (step: LaunchStep) => {
    if (step.status === 'completed') {
      return <Badge className="bg-green-100 text-green-800">–ì–æ—Ç–æ–≤–æ</Badge>;
    }
    if (step.status === 'warning') {
      return <Badge className="bg-yellow-100 text-yellow-800">–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ</Badge>;
    }
    if (step.required) {
      return <Badge variant="destructive">–¢—Ä–µ–±—É–µ—Ç—Å—è</Badge>;
    }
    return <Badge variant="outline">–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ</Badge>;
  };

  return (
    <div className="space-y-6">
      {/* –°—Ç–∞—Ç—É—Å –∑–∞–ø—É—Å–∫–∞ */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Rocket className="h-5 w-5" />
            Production Launch
          </CardTitle>
          <CardDescription>
            –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ production —Ä–µ–∂–∏–º
          </CardDescription>
        </CardHeader>
        <CardContent>
          <div className="flex items-center justify-between mb-6">
            <div>
              <h3 className="text-lg font-semibold">
                {productionMode ? '‚úÖ –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞' : '–°–∏—Å—Ç–µ–º–∞ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏'}
              </h3>
              <p className="text-sm text-muted-foreground">
                {readyToLaunch 
                  ? '–í—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –≥–æ—Ç–æ–≤—ã –∫ –∑–∞–ø—É—Å–∫—É'
                  : '–ó–∞–≤–µ—Ä—à–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º'
                }
              </p>
            </div>
            
            {!productionMode && (
              <Button 
                onClick={handleLaunch}
                disabled={!readyToLaunch || isLaunching}
                className="bg-gradient-to-r from-green-600 to-green-700 hover:from-green-700 hover:to-green-800"
              >
                {isLaunching ? (
                  <>
                    <Settings className="h-4 w-4 mr-2 animate-spin" />
                    –ó–∞–ø—É—Å–∫...
                  </>
                ) : (
                  <>
                    <Rocket className="h-4 w-4 mr-2" />
                    –ó–∞–ø—É—Å—Ç–∏—Ç—å Production
                  </>
                )}
              </Button>
            )}
          </div>

          {productionMode && (
            <Alert>
              <Globe className="h-4 w-4" />
              <AlertDescription>
                <strong>Production —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–µ–Ω!</strong> –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –±–æ–µ–≤–æ–º —Ä–µ–∂–∏–º–µ.
                –í—Å–µ –∑–∞–∫–∞–∑—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è.
              </AlertDescription>
            </Alert>
          )}
        </CardContent>
      </Card>

      {/* –ß–µ–∫-–ª–∏—Å—Ç –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ */}
      <Card>
        <CardHeader>
          <CardTitle>–ß–µ–∫-–ª–∏—Å—Ç –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏</CardTitle>
          <CardDescription>
            –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
          </CardDescription>
        </CardHeader>
        <CardContent>
          <div className="space-y-4">
            {launchSteps.map((step) => (
              <div key={step.id} className="flex items-center justify-between p-4 border rounded-lg">
                <div className="flex items-center gap-3">
                  {getStepIcon(step.status)}
                  <div>
                    <h4 className="font-medium">{step.title}</h4>
                    <p className="text-sm text-muted-foreground">{step.description}</p>
                  </div>
                </div>
                {getStepBadge(step)}
              </div>
            ))}
          </div>
        </CardContent>
      </Card>

      {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
        <Card>
          <CardContent className="p-4">
            <div className="flex items-center gap-2 mb-2">
              <Monitor className="h-4 w-4" />
              <h4 className="font-medium">–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥</h4>
            </div>
            <p className="text-sm text-muted-foreground mb-3">
              –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
            </p>
            <Button variant="outline" size="sm" className="w-full">
              –û—Ç–∫—Ä—ã—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
            </Button>
          </CardContent>
        </Card>

        <Card>
          <CardContent className="p-4">
            <div className="flex items-center gap-2 mb-2">
              <Settings className="h-4 w-4" />
              <h4 className="font-medium">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</h4>
            </div>
            <p className="text-sm text-muted-foreground mb-3">
              –§–∏–Ω–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã
            </p>
            <Button variant="outline" size="sm" className="w-full">
              –ù–∞—Å—Ç—Ä–æ–∏—Ç—å
            </Button>
          </CardContent>
        </Card>

        <Card>
          <CardContent className="p-4">
            <div className="flex items-center gap-2 mb-2">
              <Globe className="h-4 w-4" />
              <h4 className="font-medium">–°–∞–π—Ç</h4>
            </div>
            <p className="text-sm text-muted-foreground mb-3">
              –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å–∞–π—Ç–∞
            </p>
            <Button variant="outline" size="sm" className="w-full" asChild>
              <a href="/" target="_blank">
                –û—Ç–∫—Ä—ã—Ç—å —Å–∞–π—Ç
              </a>
            </Button>
          </CardContent>
        </Card>
      </div>
    </div>
  );
}