import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Card } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Progress } from "@/components/ui/progress";
import { Upload, Table, FileSpreadsheet, Zap, CheckCircle, ArrowRight } from "lucide-react";

const DEMO_RESULTS = [
  {
    url: "example.com/services",
    title: "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏ –∫–æ–ø–∏—Ä–∞–π—Ç–∏–Ω–≥–∞ –≤ –ú–æ—Å–∫–≤–µ | CopyPro",
    description: "–ó–∞–∫–∞–∑–∞—Ç—å –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã –æ—Ç —ç–∫—Å–ø–µ—Ä—Ç–æ–≤. –ë—ã—Å—Ç—Ä–æ, –Ω–µ–¥–æ—Ä–æ–≥–æ, —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π. –ë–æ–ª–µ–µ 500 –¥–æ–≤–æ–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê",
    keywords: "–∫–æ–ø–∏—Ä–∞–π—Ç–∏–Ω–≥, —É—Å–ª—É–≥–∏ –∫–æ–ø–∏—Ä–∞–π—Ç–µ—Ä–∞, –∑–∞–∫–∞–∑–∞—Ç—å —Ç–µ–∫—Å—Ç",
    status: "completed"
  },
  {
    url: "example.com/seo-texts", 
    title: "SEO-—Ç–µ–∫—Å—Ç—ã –¥–ª—è —Å–∞–π—Ç–æ–≤: –∑–∞–∫–∞–∑–∞—Ç—å –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç",
    description: "–°–æ–∑–¥–∞–Ω–∏–µ SEO-—Ç–µ–∫—Å—Ç–æ–≤ —Å –≤—ã—Å–æ–∫–æ–π –∫–æ–Ω–≤–µ—Ä—Å–∏–µ–π. –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤, –ø–æ–¥–±–æ—Ä –∫–ª—é—á–µ–π, LSI-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è. –†–æ—Å—Ç —Ç—Ä–∞—Ñ–∏–∫–∞ –¥–æ 300%",
    keywords: "seo —Ç–µ–∫—Å—Ç—ã, –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç, –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ",
    status: "completed"
  },
  {
    url: "example.com/landing-pages",
    title: "–ü—Ä–æ–¥–∞—é—â–∏–µ –ª–µ–Ω–¥–∏–Ω–≥–∏: —Å–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü —Å –≤—ã—Å–æ–∫–æ–π –∫–æ–Ω–≤–µ—Ä—Å–∏–µ–π",
    description: "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ª–µ–Ω–¥–∏–Ω–≥–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–¥–∞—é—Ç. –ü—Å–∏—Ö–æ–ª–æ–≥–∏—è –ø—Ä–æ–¥–∞–∂, A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, –∫–æ–Ω–≤–µ—Ä—Å–∏—è –¥–æ 15%. –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞ 3 –¥–Ω—è",
    keywords: "–ø—Ä–æ–¥–∞—é—â–∏–π –ª–µ–Ω–¥–∏–Ω–≥, —Å–æ–∑–¥–∞–Ω–∏–µ landing page, –∫–æ–Ω–≤–µ—Ä—Å–∏—è",
    status: "processing"
  }
];

export default function BulkSeoShowcaseSection() {
  const [uploadProgress, setUploadProgress] = useState(0);
  const [processingStage, setProcessingStage] = useState(0);
  const [showResults, setShowResults] = useState(false);

  const handleDemoStart = () => {
    // Simulate file upload
    let progress = 0;
    const uploadTimer = setInterval(() => {
      progress += 10;
      setUploadProgress(progress);
      if (progress >= 100) {
        clearInterval(uploadTimer);
        
        // Start processing simulation
        let stage = 0;
        const processTimer = setInterval(() => {
          stage += 1;
          setProcessingStage(stage);
          if (stage >= 4) {
            clearInterval(processTimer);
            setTimeout(() => setShowResults(true), 500);
          }
        }, 1000);
      }
    }, 200);
  };

  const resetDemo = () => {
    setUploadProgress(0);
    setProcessingStage(0);
    setShowResults(false);
  };

  return (
    <section className="py-20 relative overflow-hidden">
      {/* Background */}
      <div className="absolute inset-0 bg-gradient-to-br from-slate-50 to-blue-50/50 dark:from-slate-900 dark:to-blue-900/20">
        <div className="absolute inset-0 bg-grid-pattern opacity-20"></div>
      </div>

      <div className="container mx-auto px-4 relative z-10">
        <div className="text-center space-y-6 mb-16">
          <Badge className="glass-interactive px-4 py-2 text-lg">
            üöÄ –ú–∞—Å—Å–æ–≤—ã–µ AI-—Ä–µ—à–µ–Ω–∏—è
          </Badge>
          
          <h2 className="text-3xl md:text-5xl font-bold">
            <span className="text-gradient">–û—Ç —Ñ–∞–π–ª–∞ –¥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞</span>
            <br />
            <span className="text-foreground">–∑–∞ 1 —á–∞—Å</span>
          </h2>
          
          <p className="text-xl text-muted-foreground max-w-3xl mx-auto">
            –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º–∞—Å—Å–æ–≤–æ–≥–æ SEO-–∫–æ–Ω—Ç–µ–Ω—Ç–∞: 
            –∑–∞–≥—Ä—É–∂–∞–µ—Ç–µ Excel —Å URL ‚Üí –ø–æ–ª—É—á–∞–µ—Ç–µ –≥–æ—Ç–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É —Å —Ç–µ–∫—Å—Ç–∞–º–∏ –∏ –º–µ—Ç–∞—Ç–µ–≥–∞–º–∏
          </p>
        </div>

        <div className="max-w-6xl mx-auto">
          <div className="grid lg:grid-cols-2 gap-12 items-start">
            
            {/* Demo Interface */}
            <div className="space-y-6">
              <Card className="glass-hero p-8">
                <div className="space-y-6">
                  <h3 className="text-2xl font-semibold text-center">
                    –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è
                  </h3>

                  {/* File Upload Area */}
                  <div className="border-2 border-dashed border-muted-foreground/30 rounded-lg p-8 text-center space-y-4 glass-interactive">
                    <Upload className="w-12 h-12 mx-auto text-muted-foreground" />
                    <div>
                      <p className="text-lg font-medium">–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª —Å URL-–∞–¥—Ä–µ—Å–∞–º–∏</p>
                      <p className="text-sm text-muted-foreground">Excel, CSV –¥–æ 10,000 —Å—Ç—Ä–æ–∫</p>
                    </div>
                    
                    {uploadProgress === 0 ? (
                      <Button onClick={handleDemoStart} className="glass-interactive">
                        <FileSpreadsheet className="w-4 h-4 mr-2" />
                        –î–µ–º–æ: –∑–∞–≥—Ä—É–∑–∏—Ç—å sample.xlsx
                      </Button>
                    ) : (
                      <div className="space-y-2">
                        <p className="text-sm">–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞...</p>
                        <Progress value={uploadProgress} className="w-full" />
                        <p className="text-xs text-muted-foreground">{uploadProgress}%</p>
                      </div>
                    )}
                  </div>

                  {/* Processing Stages */}
                  {uploadProgress === 100 && (
                    <div className="space-y-4">
                      <h4 className="font-semibold">AI –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ:</h4>
                      
                      <div className="space-y-3">
                        {[
                          { stage: 1, text: "–ê–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –≤ –¢–û–ü-10", icon: "üîç" },
                          { stage: 2, text: "–ü–æ–¥–±–æ—Ä –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –∏ LSI", icon: "üîë" },
                          { stage: 3, text: "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è SEO-—Ç–µ–∫—Å—Ç–æ–≤", icon: "‚úçÔ∏è" },
                          { stage: 4, text: "–°–æ–∑–¥–∞–Ω–∏–µ –º–µ—Ç–∞—Ç–µ–≥–æ–≤", icon: "üè∑Ô∏è" }
                        ].map((item) => (
                          <div key={item.stage} className={`flex items-center space-x-3 p-3 rounded-lg transition-all ${
                            processingStage >= item.stage 
                              ? 'glass-panel text-foreground' 
                              : 'text-muted-foreground'
                          }`}>
                            <div className="text-2xl">{item.icon}</div>
                            <span className="flex-1">{item.text}</span>
                            {processingStage >= item.stage && (
                              <CheckCircle className="w-5 h-5 text-green-500" />
                            )}
                            {processingStage === item.stage - 1 && (
                              <Zap className="w-5 h-5 text-blue-500 animate-pulse" />
                            )}
                          </div>
                        ))}
                      </div>
                    </div>
                  )}

                  {/* Results Ready */}
                  {showResults && (
                    <div className="space-y-4">
                      <div className="flex items-center justify-between">
                        <h4 className="font-semibold text-green-600">‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –≥–æ—Ç–æ–≤!</h4>
                        <Button variant="outline" size="sm" onClick={resetDemo}>
                          –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –¥–µ–º–æ
                        </Button>
                      </div>
                      <div className="glass-panel p-4 rounded-lg">
                        <div className="flex items-center space-x-2 text-sm text-muted-foreground">
                          <Table className="w-4 h-4" />
                          <span>–°–æ–∑–¥–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞: bulk_seo_results.xlsx</span>
                        </div>
                        <div className="flex items-center space-x-2 text-sm text-muted-foreground mt-1">
                          <span>3 URL –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ ‚Ä¢ 9 SEO-—Ç–µ–∫—Å—Ç–æ–≤ —Å–æ–∑–¥–∞–Ω–æ ‚Ä¢ 18 –º–µ—Ç–∞—Ç–µ–≥–æ–≤</span>
                        </div>
                      </div>
                    </div>
                  )}
                </div>
              </Card>

              {/* Features List */}
              <Card className="glass-panel p-6">
                <h4 className="font-semibold mb-4">–ß—Ç–æ –≤—Ö–æ–¥–∏—Ç –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç:</h4>
                <div className="space-y-3 text-sm">
                  {[
                    "SEO-—Ç–µ–∫—Å—Ç—ã 3000-5000 —Å–∏–º–≤–æ–ª–æ–≤ —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏",
                    "–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ Title (–¥–æ 60 —Å–∏–º–≤–æ–ª–æ–≤)",
                    "–ü—Ä–æ–¥–∞—é—â–∏–µ Meta Description (–¥–æ 160 —Å–∏–º–≤–æ–ª–æ–≤)", 
                    "LSI-—Å–µ–º–∞–Ω—Ç–∏–∫–∞ —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–∞—è –ø–æ —Ç–µ–∫—Å—Ç—É",
                    "–ê–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é",
                    "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤"
                  ].map((feature, index) => (
                    <div key={index} className="flex items-center space-x-2">
                      <CheckCircle className="w-4 h-4 text-green-500 flex-shrink-0" />
                      <span>{feature}</span>
                    </div>
                  ))}
                </div>
              </Card>
            </div>

            {/* Results Preview */}
            <div className="space-y-6">
              <h3 className="text-2xl font-semibold">–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞</h3>
              
              <div className="space-y-4">
                {DEMO_RESULTS.map((result, index) => (
                  <Card key={index} className={`glass-panel p-6 transition-all duration-500 ${
                    showResults ? 'opacity-100 translate-y-0' : 'opacity-50 translate-y-4'
                  }`}>
                    <div className="space-y-3">
                      <div className="flex items-center justify-between">
                        <div className="text-sm text-muted-foreground font-mono">
                          {result.url}
                        </div>
                        <Badge variant={result.status === 'completed' ? 'default' : 'secondary'}>
                          {result.status === 'completed' ? '–ì–æ—Ç–æ–≤–æ' : '–û–±—Ä–∞–±–æ—Ç–∫–∞...'}
                        </Badge>
                      </div>
                      
                      <div className="space-y-2">
                        <h4 className="font-semibold text-blue-600 hover:underline cursor-pointer">
                          {result.title}
                        </h4>
                        <p className="text-sm text-muted-foreground leading-relaxed">
                          {result.description}
                        </p>
                        <div className="flex flex-wrap gap-2">
                          {result.keywords.split(', ').map((keyword, i) => (
                            <Badge key={i} variant="outline" className="text-xs">
                              {keyword}
                            </Badge>
                          ))}
                        </div>
                      </div>
                    </div>
                  </Card>
                ))}
              </div>

              {/* CTA */}
              <Card className="glass-hero p-6 text-center">
                <div className="space-y-4">
                  <h4 className="text-xl font-semibold">–ì–æ—Ç–æ–≤—ã –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å?</h4>
                  <p className="text-muted-foreground">
                    –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Å–≤–æ–π —Ñ–∞–π–ª –∏ –ø–æ–ª—É—á–∏—Ç–µ –≥–æ—Ç–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                  </p>
                  <Button size="lg" className="glass-interactive">
                    <Upload className="w-4 h-4 mr-2" />
                    –ó–∞–∫–∞–∑–∞—Ç—å –º–∞—Å—Å–æ–≤—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É
                    <ArrowRight className="w-4 h-4 ml-2" />
                  </Button>
                </div>
              </Card>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
}