
import React, { useState } from 'react';
import { Card } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import { 
  Filter, 
  Clock, 
  DollarSign, 
  Star, 
  Zap, 
  Info,
  ChevronDown,
  ChevronUp
} from 'lucide-react';
import { SERVICE_CATEGORIES } from '@/data/quickOrderServices';

interface SmartFiltersProps {
  selectedCategory: string;
  selectedPriceRange: string;
  selectedUrgency: string;
  onCategoryChange: (category: string) => void;
  onPriceRangeChange: (range: string) => void;
  onUrgencyChange: (urgency: string) => void;
}

const PRICE_RANGES = [
  { id: 'all', label: '–õ—é–±–∞—è —Ü–µ–Ω–∞', range: [0, Infinity] },
  { id: 'budget', label: '–î–æ 2000‚ÇΩ', range: [0, 2000] },
  { id: 'medium', label: '2000-5000‚ÇΩ', range: [2000, 5000] },
  { id: 'premium', label: '–û—Ç 5000‚ÇΩ', range: [5000, Infinity] }
];

const URGENCY_OPTIONS = [
  { id: 'any', label: '–õ—é–±—ã–µ —Å—Ä–æ–∫–∏', icon: Clock },
  { id: 'fast', label: '–°—Ä–æ—á–Ω–æ (1-2 –¥–Ω—è)', icon: Zap },
  { id: 'standard', label: '–°—Ç–∞–Ω–¥–∞—Ä—Ç (2-5 –¥–Ω–µ–π)', icon: Clock }
];

export default function SmartFilters({
  selectedCategory,
  selectedPriceRange,
  selectedUrgency,
  onCategoryChange,
  onPriceRangeChange,
  onUrgencyChange
}: SmartFiltersProps) {
  const [isExpanded, setIsExpanded] = useState(false);

  return (
    <Card className="p-4 mb-6 bg-gradient-to-r from-blue-50 to-purple-50/30 border-blue-200/50">
      <div className="flex items-center justify-between mb-4">
        <div className="flex items-center gap-2">
          <Filter className="w-5 h-5 text-blue-600" />
          <h3 className="font-semibold text-slate-800">–£–º–Ω—ã–π –ø–æ–∏—Å–∫ —É—Å–ª—É–≥</h3>
          <Badge variant="outline" className="text-xs">
            <Info className="w-3 h-3 mr-1" />
            –° —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏
          </Badge>
        </div>
        <Button
          variant="ghost"
          size="sm"
          onClick={() => setIsExpanded(!isExpanded)}
          className="text-blue-600"
        >
          {isExpanded ? (
            <>–°–∫—Ä—ã—Ç—å <ChevronUp className="w-4 h-4 ml-1" /></>
          ) : (
            <>–§–∏–ª—å—Ç—Ä—ã <ChevronDown className="w-4 h-4 ml-1" /></>
          )}
        </Button>
      </div>

      {/* Categories - always visible */}
      <div className="mb-4">
        <div className="flex flex-wrap gap-2">
          {SERVICE_CATEGORIES.map((category) => (
            <Button
              key={category.id}
              variant={selectedCategory === category.id ? "default" : "outline"}
              size="sm"
              onClick={() => onCategoryChange(category.id)}
              className={`text-xs transition-all duration-200 ${
                selectedCategory === category.id 
                  ? 'bg-blue-600 text-white shadow-md' 
                  : 'hover:bg-blue-50 hover:border-blue-300'
              }`}
            >
              <span className="mr-1">{category.icon}</span>
              {category.name}
            </Button>
          ))}
        </div>
      </div>

      {/* Expanded filters */}
      {isExpanded && (
        <div className="space-y-4 border-t border-blue-200/50 pt-4">
          {/* Price Range */}
          <div>
            <label className="text-sm font-medium text-slate-700 mb-2 flex items-center gap-2">
              <DollarSign className="w-4 h-4 text-green-600" />
              –ë—é–¥–∂–µ—Ç –ø—Ä–æ–µ–∫—Ç–∞
            </label>
            <div className="grid grid-cols-2 md:grid-cols-4 gap-2">
              {PRICE_RANGES.map((range) => (
                <Button
                  key={range.id}
                  variant={selectedPriceRange === range.id ? "default" : "outline"}
                  size="sm"
                  onClick={() => onPriceRangeChange(range.id)}
                  className={`text-xs ${
                    selectedPriceRange === range.id 
                      ? 'bg-green-600 text-white' 
                      : 'hover:bg-green-50'
                  }`}
                >
                  {range.label}
                </Button>
              ))}
            </div>
          </div>

          {/* Urgency */}
          <div>
            <label className="text-sm font-medium text-slate-700 mb-2 flex items-center gap-2">
              <Clock className="w-4 h-4 text-orange-600" />
              –°—Ä–æ–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
            </label>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-2">
              {URGENCY_OPTIONS.map((option) => {
                const Icon = option.icon;
                return (
                  <Button
                    key={option.id}
                    variant={selectedUrgency === option.id ? "default" : "outline"}
                    size="sm"
                    onClick={() => onUrgencyChange(option.id)}
                    className={`text-xs justify-start ${
                      selectedUrgency === option.id 
                        ? 'bg-orange-600 text-white' 
                        : 'hover:bg-orange-50'
                    }`}
                  >
                    <Icon className="w-4 h-4 mr-2" />
                    {option.label}
                  </Button>
                );
              })}
            </div>
          </div>

          {/* Quick tips */}
          <div className="bg-blue-50 p-3 rounded-lg border border-blue-200">
            <div className="flex items-start gap-2">
              <Star className="w-4 h-4 text-blue-600 mt-0.5 flex-shrink-0" />
              <div className="text-xs text-blue-800">
                <div className="font-medium mb-1">üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è —ç–∫—Å–ø–µ—Ä—Ç–∞:</div>
                <div>
                  {selectedCategory === 'content' && 'SEO-—Å—Ç–∞—Ç—å–∏ –ª—É—á—à–µ –≤—Å–µ–≥–æ —Ä–∞–±–æ—Ç–∞—é—Ç –ø—Ä–∏ –æ–±—ä—ë–º–µ –æ—Ç 1500 —Å–ª–æ–≤'}
                  {selectedCategory === 'sales' && '–õ–µ–Ω–¥–∏–Ω–≥–∏ —Å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–µ–π –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é—Ç –Ω–∞ 40% –ª—É—á—à–µ'}
                  {selectedCategory === 'email' && 'Email-–ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏–∑ 5-7 –ø–∏—Å–µ–º –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π ROI'}
                  {selectedCategory === 'social' && '–ö–æ–Ω—Ç–µ–Ω—Ç-–ø–ª–∞–Ω—ã –Ω–∞ –º–µ—Å—è—Ü –≤–ø–µ—Ä—ë–¥ —ç–∫–æ–Ω–æ–º—è—Ç –¥–æ 60% –≤—Ä–µ–º–µ–Ω–∏'}
                  {selectedCategory === 'all' && '–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã –ø–æ–ª—É—á–∞—é—Ç —Å–∫–∏–¥–∫—É –¥–æ 20%'}
                  {!['content', 'sales', 'email', 'social', 'all'].includes(selectedCategory) && 
                    '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π'
                  }
                </div>
              </div>
            </div>
          </div>
        </div>
      )}
    </Card>
  );
}
