
import React from 'react';
import { Input } from '@/components/ui/input';
import { Textarea } from '@/components/ui/textarea';
import { Label } from '@/components/ui/label';
import { Checkbox } from '@/components/ui/checkbox';
import { Card } from '@/components/ui/card';
import { User, Mail, Phone, Building, MessageSquare, Star } from 'lucide-react';

interface ContactStepProps {
  data: {
    contactName: string;
    contactEmail: string;
    contactPhone: string;
    contactCompany: string;
    specialRequirements: string;
    previousExperience: boolean;
  };
  onUpdate: (data: Partial<ContactStepProps['data']>) => void;
}

export default function ContactStep({ data, onUpdate }: ContactStepProps) {
  return (
    <div className="space-y-6">
      <div className="text-center mb-6">
        <h2 className="text-2xl font-bold text-gray-900 mb-2">
          –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        </h2>
        <p className="text-gray-600">
          –§–∏–Ω–∞–ª—å–Ω—ã–π —à–∞–≥! –£–∫–∞–∂–∏—Ç–µ, –∫–∞–∫ —Å –≤–∞–º–∏ —Å–≤—è–∑–∞—Ç—å—Å—è
        </p>
      </div>

      {/* Contact Information */}
      <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div className="space-y-2">
          <Label htmlFor="contactName" className="flex items-center gap-2">
            <User className="w-4 h-4" />
            –ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è *
          </Label>
          <Input
            id="contactName"
            value={data.contactName}
            onChange={(e) => onUpdate({ contactName: e.target.value })}
            placeholder="–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤"
            className="text-base"
          />
        </div>

        <div className="space-y-2">
          <Label htmlFor="contactEmail" className="flex items-center gap-2">
            <Mail className="w-4 h-4" />
            Email *
          </Label>
          <Input
            id="contactEmail"
            type="email"
            value={data.contactEmail}
            onChange={(e) => onUpdate({ contactEmail: e.target.value })}
            placeholder="ivan@company.com"
            className="text-base"
          />
        </div>

        <div className="space-y-2">
          <Label htmlFor="contactPhone" className="flex items-center gap-2">
            <Phone className="w-4 h-4" />
            –¢–µ–ª–µ—Ñ–æ–Ω
          </Label>
          <Input
            id="contactPhone"
            type="tel"
            value={data.contactPhone}
            onChange={(e) => onUpdate({ contactPhone: e.target.value })}
            placeholder="+7 (999) 123-45-67"
            className="text-base"
          />
          <p className="text-xs text-gray-500">
            –î–ª—è —Å—Ä–æ—á–Ω–æ–π —Å–≤—è–∑–∏ –ø–æ –ø—Ä–æ–µ–∫—Ç—É
          </p>
        </div>

        <div className="space-y-2">
          <Label htmlFor="contactCompany" className="flex items-center gap-2">
            <Building className="w-4 h-4" />
            –ö–æ–º–ø–∞–Ω–∏—è
          </Label>
          <Input
            id="contactCompany"
            value={data.contactCompany}
            onChange={(e) => onUpdate({ contactCompany: e.target.value })}
            placeholder="–û–û–û –†–æ–≥–∞ –∏ –ö–æ–ø—ã—Ç–∞"
            className="text-base"
          />
        </div>
      </div>

      {/* Special Requirements */}
      <div className="space-y-2">
        <Label htmlFor="specialRequirements" className="flex items-center gap-2">
          <MessageSquare className="w-4 h-4" />
          –û—Å–æ–±—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
        </Label>
        <Textarea
          id="specialRequirements"
          value={data.specialRequirements}
          onChange={(e) => onUpdate({ specialRequirements: e.target.value })}
          placeholder="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è, –ø–æ–∂–µ–ª–∞–Ω–∏—è –∫ —Å—Ç–∏–ª—é, –ø—Ä–∏–º–µ—Ä—ã –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏—Ö—Å—è —Ç–µ–∫—Å—Ç–æ–≤..."
          rows={4}
          className="text-base"
        />
      </div>

      {/* Previous Experience */}
      <div className="space-y-3">
        <div className="flex items-center space-x-2">
          <Checkbox
            id="previousExperience"
            checked={data.previousExperience}
            onCheckedChange={(checked) => onUpdate({ previousExperience: !!checked })}
          />
          <Label htmlFor="previousExperience" className="flex items-center gap-2">
            <Star className="w-4 h-4" />
            –£ –º–µ–Ω—è —É–∂–µ –µ—Å—Ç—å –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å –∫–æ–ø–∏—Ä–∞–π—Ç–µ—Ä–∞–º–∏
          </Label>
        </div>
        <p className="text-sm text-gray-600 ml-6">
          –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å –≤–∞—à–∏ –æ–∂–∏–¥–∞–Ω–∏—è
        </p>
      </div>

      {/* Communication Preferences */}
      <Card className="bg-purple-50 border-purple-200">
        <div className="p-4">
          <h4 className="font-semibold text-purple-900 mb-3">
            üì± –ö–∞–∫ –º—ã –±—É–¥–µ–º –æ–±—â–∞—Ç—å—Å—è
          </h4>
          <ul className="text-sm text-purple-800 space-y-2">
            <li className="flex items-center gap-2">
              <Mail className="w-4 h-4" />
              <span>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –Ω–∞ email –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç</span>
            </li>
            <li className="flex items-center gap-2">
              <Phone className="w-4 h-4" />
              <span>–ó–≤–æ–Ω–æ–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π</span>
            </li>
            <li className="flex items-center gap-2">
              <MessageSquare className="w-4 h-4" />
              <span>–†–µ–≥—É–ª—è—Ä–Ω—ã–µ –æ—Ç—á—ë—Ç—ã –æ —Ö–æ–¥–µ —Ä–∞–±–æ—Ç—ã</span>
            </li>
            <li className="flex items-center gap-2">
              <Star className="w-4 h-4" />
              <span>–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø–æ–∫–∞–∑ —á–µ—Ä–Ω–æ–≤–∏–∫–∞ (–ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)</span>
            </li>
          </ul>
        </div>
      </Card>

      {/* Data Processing Agreement */}
      <Card className="bg-gray-50 border-gray-200">
        <div className="p-4">
          <p className="text-xs text-gray-600">
            –û—Ç–ø—Ä–∞–≤–ª—è—è –∑–∞–∫–∞–∑, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å{' '}
            <a href="/privacy" className="text-blue-600 hover:underline">
              –ø–æ–ª–∏—Ç–∏–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            </a>{' '}
            –∏{' '}
            <a href="/terms" className="text-blue-600 hover:underline">
              —É—Å–ª–æ–≤–∏—è–º–∏ –æ–∫–∞–∑–∞–Ω–∏—è —É—Å–ª—É–≥
            </a>
            . –ú—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö 
            —Ç–æ–ª—å–∫–æ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞.
          </p>
        </div>
      </Card>

      {/* Final CTA Preview */}
      <Card className="bg-gradient-to-r from-green-500 to-emerald-500 text-white">
        <div className="p-6 text-center">
          <h3 className="text-xl font-bold mb-2">
            üéâ –û—Ç–ª–∏—á–Ω–æ! –í—Å—ë –≥–æ—Ç–æ–≤–æ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ
          </h3>
          <p className="opacity-90">
            –ü–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑" –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ 
            –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π
          </p>
        </div>
      </Card>
    </div>
  );
}
