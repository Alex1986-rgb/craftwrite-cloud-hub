
import React from 'react';
import { Input } from '@/components/ui/input';
import { Textarea } from '@/components/ui/textarea';
import { Label } from '@/components/ui/label';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Plus, X, Globe, Lightbulb, Users, Target } from 'lucide-react';

interface ProjectDetailsStepProps {
  data: {
    projectTitle: string;
    targetAudience: string;
    projectGoals: string;
    competitorUrls: string[];
  };
  onUpdate: (data: Partial<ProjectDetailsStepProps['data']>) => void;
}

const AUDIENCE_TEMPLATES = [
  'B2B –∫–ª–∏–µ–Ω—Ç—ã', '–ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥–∏', '–í–ª–∞–¥–µ–ª—å—Ü—ã –º–∞–ª–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞',
  'IT-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã', '–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–∏ –∫–æ–º–ø–∞–Ω–∏–π', '–ß–∞—Å—Ç–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã',
  '–°—Ç—É–¥–µ–Ω—Ç—ã', '–ú–æ–ª–æ–¥—ã–µ –º–∞–º—ã', '–ü–µ–Ω—Å–∏–æ–Ω–µ—Ä—ã'
];

const GOAL_TEMPLATES = [
  '–£–≤–µ–ª–∏—á–∏—Ç—å –ø—Ä–æ–¥–∞–∂–∏', '–ü–æ–≤—ã—Å–∏—Ç—å —É–∑–Ω–∞–≤–∞–µ–º–æ—Å—Ç—å –±—Ä–µ–Ω–¥–∞', '–ü—Ä–∏–≤–ª–µ—á—å —Ç—Ä–∞—Ñ–∏–∫',
  '–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ª–∏–¥—ã', '–û–±—É—á–∏—Ç—å –∞—É–¥–∏—Ç–æ—Ä–∏—é', '–ü–æ–≤—ã—Å–∏—Ç—å –¥–æ–≤–µ—Ä–∏–µ',
  '–£–ª—É—á—à–∏—Ç—å SEO-–ø–æ–∑–∏—Ü–∏–∏', '–ó–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç'
];

export default function ProjectDetailsStep({ data, onUpdate }: ProjectDetailsStepProps) {
  const addCompetitorUrl = () => {
    onUpdate({
      competitorUrls: [...data.competitorUrls, '']
    });
  };

  const updateCompetitorUrl = (index: number, url: string) => {
    const newUrls = [...data.competitorUrls];
    newUrls[index] = url;
    onUpdate({ competitorUrls: newUrls });
  };

  const removeCompetitorUrl = (index: number) => {
    const newUrls = data.competitorUrls.filter((_, i) => i !== index);
    onUpdate({ competitorUrls: newUrls });
  };

  const addTemplate = (field: 'targetAudience' | 'projectGoals', template: string) => {
    const currentValue = data[field];
    const newValue = currentValue ? `${currentValue}, ${template}` : template;
    onUpdate({ [field]: newValue });
  };

  return (
    <div className="space-y-6">
      <div className="text-center mb-6">
        <h2 className="text-2xl font-bold text-gray-900 mb-2">
          –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–µ–º –ø—Ä–æ–µ–∫—Ç–µ
        </h2>
        <p className="text-gray-600">
          –ß–µ–º –±–æ–ª—å—à–µ –¥–µ—Ç–∞–ª–µ–π, —Ç–µ–º —Ç–æ—á–Ω–µ–µ –±—É–¥–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        </p>
      </div>

      {/* Project Title */}
      <div className="space-y-2">
        <Label htmlFor="projectTitle" className="flex items-center gap-2">
          <Target className="w-4 h-4" />
          –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –∏–ª–∏ –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ *
        </Label>
        <Input
          id="projectTitle"
          value={data.projectTitle}
          onChange={(e) => onUpdate({ projectTitle: e.target.value })}
          placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –õ–µ–Ω–¥–∏–Ω–≥ –¥–ª—è –æ–Ω–ª–∞–π–Ω-–∫—É—Ä—Å–∞ –ø–æ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥—É"
          className="text-base"
        />
        <p className="text-xs text-gray-500">
          –ü–æ–º–æ–≥–∞–µ—Ç –ø–æ–Ω—è—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ –ø–æ–¥–æ–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Å—Ç–∏–ª—å
        </p>
      </div>

      {/* Target Audience */}
      <div className="space-y-3">
        <Label htmlFor="targetAudience" className="flex items-center gap-2">
          <Users className="w-4 h-4" />
          –¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è *
        </Label>
        <Textarea
          id="targetAudience"
          value={data.targetAudience}
          onChange={(e) => onUpdate({ targetAudience: e.target.value })}
          placeholder="–û–ø–∏—à–∏—Ç–µ, –∫—Ç–æ –≤–∞—à–∞ —Ü–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è: –≤–æ–∑—Ä–∞—Å—Ç, –∏–Ω—Ç–µ—Ä–µ—Å—ã, –ø—Ä–æ—Ñ–µ—Å—Å–∏—è, –ø—Ä–æ–±–ª–µ–º—ã..."
          rows={3}
          className="text-base"
        />
        
        {/* Quick templates */}
        <div className="space-y-2">
          <p className="text-xs text-gray-500">–ë—ã—Å—Ç—Ä—ã–µ —à–∞–±–ª–æ–Ω—ã:</p>
          <div className="flex flex-wrap gap-2">
            {AUDIENCE_TEMPLATES.map((template, idx) => (
              <Badge
                key={idx}
                variant="outline"
                className="cursor-pointer hover:bg-blue-50"
                onClick={() => addTemplate('targetAudience', template)}
              >
                <Plus className="w-3 h-3 mr-1" />
                {template}
              </Badge>
            ))}
          </div>
        </div>
      </div>

      {/* Project Goals */}
      <div className="space-y-3">
        <Label htmlFor="projectGoals" className="flex items-center gap-2">
          <Lightbulb className="w-4 h-4" />
          –¶–µ–ª–∏ –ø—Ä–æ–µ–∫—Ç–∞ *
        </Label>
        <Textarea
          id="projectGoals"
          value={data.projectGoals}
          onChange={(e) => onUpdate({ projectGoals: e.target.value })}
          placeholder="–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –¥–æ—Å—Ç–∏—á—å —Å –ø–æ–º–æ—â—å—é —ç—Ç–æ–≥–æ —Ç–µ–∫—Å—Ç–∞? –ö–∞–∫–∏–µ –∑–∞–¥–∞—á–∏ —Ä–µ—à–∏—Ç—å?"
          rows={3}
          className="text-base"
        />
        
        {/* Goal templates */}
        <div className="space-y-2">
          <p className="text-xs text-gray-500">–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ü–µ–ª–∏:</p>
          <div className="flex flex-wrap gap-2">
            {GOAL_TEMPLATES.map((template, idx) => (
              <Badge
                key={idx}
                variant="outline"
                className="cursor-pointer hover:bg-green-50"
                onClick={() => addTemplate('projectGoals', template)}
              >
                <Plus className="w-3 h-3 mr-1" />
                {template}
              </Badge>
            ))}
          </div>
        </div>
      </div>

      {/* Competitor Analysis */}
      <div className="space-y-3">
        <Label className="flex items-center gap-2">
          <Globe className="w-4 h-4" />
          –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
        </Label>
        <p className="text-sm text-gray-600">
          –î–æ–±–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–∞–π—Ç—ã –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏—Ö –ø–æ–¥—Ö–æ–¥–∞
        </p>
        
        {data.competitorUrls.map((url, index) => (
          <div key={index} className="flex gap-2">
            <Input
              value={url}
              onChange={(e) => updateCompetitorUrl(index, e.target.value)}
              placeholder="https://example.com"
              className="flex-1"
            />
            <Button
              variant="outline"
              size="sm"
              onClick={() => removeCompetitorUrl(index)}
            >
              <X className="w-4 h-4" />
            </Button>
          </div>
        ))}
        
        <Button
          variant="outline"
          onClick={addCompetitorUrl}
          className="w-full flex items-center gap-2"
        >
          <Plus className="w-4 h-4" />
          –î–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞
        </Button>
        
        {data.competitorUrls.length > 0 && (
          <div className="bg-blue-50 p-3 rounded-lg">
            <p className="text-sm text-blue-800">
              <strong>–ë–æ–Ω—É—Å:</strong> –ú—ã –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –∏ —Å–æ–∑–¥–∞–¥–∏–º 
              —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã–¥–µ–ª–∏—Ç –≤–∞—Å –Ω–∞ —Ä—ã–Ω–∫–µ
            </p>
          </div>
        )}
      </div>

      {/* Tips */}
      <div className="bg-gradient-to-r from-purple-50 to-blue-50 p-4 rounded-lg border border-purple-200">
        <h4 className="font-semibold text-purple-900 mb-2">üí° –°–æ–≤–µ—Ç—ã –¥–ª—è –ª—É—á—à–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:</h4>
        <ul className="text-sm text-purple-800 space-y-1">
          <li>‚Ä¢ –û–ø–∏—à–∏—Ç–µ –±–æ–ª–µ–≤—ã–µ —Ç–æ—á–∫–∏ –≤–∞—à–µ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏</li>
          <li>‚Ä¢ –£–∫–∞–∂–∏—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –≤–∞—à–µ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞</li>
          <li>‚Ä¢ –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –∂–µ–ª–∞–µ–º–æ–º —Å—Ç–∏–ª–µ –æ–±—â–µ–Ω–∏—è (–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π/–¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π)</li>
          <li>‚Ä¢ –î–æ–±–∞–≤—å—Ç–µ –ø—Ä–∏–º–µ—Ä—ã —É—Å–ø–µ—à–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ –≤ –≤–∞—à–µ–π –Ω–∏—à–µ</li>
        </ul>
      </div>
    </div>
  );
}
